{% extends "main.njk" %}

{% block content %}

<h2>Overview</h2>

<h3>What is the Joint Kit?</h3>

<p>
  At its core, the Joint Kit is a data operations layer.
</p>

<p>
  You can use it to:
</p>

<lilp>
{% call text.framedblock(maxWidth='350px', raised=true) -%}
<ul class="definition">
  <li>
    <div>Build object models for your persisted data</div>
  </li>
  <li>
    <div>Build server-side method libraries</div>
  </li>
  <li>
    <div>Build RESTful APIs for client apps</div>
  </li>
</ul>
{%- endcall %}
</lilp>

<br />

<h3>How does it work?</h3>

<p>
  The Joint Kit provides a set of abstract CRUD and relational data actions:
</p>

<table class="layout nopad" style="max-width:490px;">
  <tr>
    <td width="170x;">
{% call text.framedblock(raised=true) -%}
<div style="margin-bottom:4px;"><b>createItem</b></div>
<div style="margin-bottom:4px;"><b>updateItem</b></div>
<div style="margin-bottom:4px;"><b>getItem</b></div>
<div style="margin-bottom:4px;"><b>getItems</b></div>
<div style="margin-bottom:4px;"><b>upsertItem</b></div>
<div style="margin-bottom:4px;"><b>deleteItem</b></div>
{%- endcall %}
    </td>
    <td width="40px;">&nbsp;</td>
    <td>
{% call text.framedblock(raised=true) -%}
<div style="margin-bottom:4px;"><b>getAllAssociatedItems</b></div>
<div style="margin-bottom:4px;"><b>hasAssociatedItem</b></div>
<div style="margin-bottom:4px;"><b>addAssociatedItems</b></div>
<div style="margin-bottom:4px;"><b>removeAssociatedItems</b></div>
<div style="margin-bottom:4px;"><b>removeAllAssociatedItems</b></div>
{%- endcall %}
    </td>
  </tr>
</table>

<p>
  that hook to your custom database and data schema:
</p>

{{ api.apidesc('Postgres, MySQL, SQLite') }}

<p>
  and expose out-of-the-box logic that you compose per your specification:
</p>

{{ api.apidesc('logical operation, filtering, data & relationship transformation, validation, authorization') }}

<br />

<p>
  <lilp>
  Configure the actions for your specific backend application
  <br />
  using a simple JSON syntax:
  </lilp>
</p>

<p>
{% call code.block(maxWidth='510px', raised=true) -%}
{
  modelName: <b>'User'</b>,     <comment>// your custom model name</comment>
  methods: [
    {
      name: <b>'getOne'</b>,    <comment>// your custom method name</comment>
      action:'getItem',
      spec: {            <comment>// your specification</comment>
        fields: [
          { name: 'id', type: 'Number', required: true }
        ]
      }
    },
    <comment>...</comment>
  ]
}
{%- endcall %}
</p>

<p>
  Then, use it in your server-side code:
</p>

{% call code.block(maxWidth='510px', raised=true) -%}
const input = { fields: { id: 3 }}
const user = await <b>joint.method.User.getOne</b>(input)
{%- endcall %}

<br /><br />

<p>
  Expose it as a RESTful endpoint:
</p>

{% call code.block(maxWidth='510px', raised=true) -%}
{
  uri: <b>'/user/:id'</b>,
  get: { method: 'User.getOne' }
}
{%- endcall %}

<p>
  And use it on the client-side:
</p>

{% call code.block(maxWidth='510px', raised=true) -%}
GET <span><b>/profile/3</b></span>
{%- endcall %}

<br />

{{ api.apidesc('The data result can be automatically serialized into JSON API spec format') }}

<br />

<h3>Where does it fit in my application?</h3>

<p>
  Architecturally, the Joint Kit sits between your persisted data service
  and your HTTP server framework.
</p>

<div class="diagram diagram-frame">
  <img src="/public/where-joint-kit-fits-in-your-app.svg" />
</div>

<br /><br />

<p>
  The Joint Kit leverages:
</p>

{% call text.framedblock(maxWidth='490px', raised=true) -%}
<ul class="definition">
  <li>
    <div style="width:180px"><i>your persistence service</i></div>
    <div style="color:#0b5693;width:25px">&#10132;</div>
    <div>to implement a data method layer</div>
  </li>
  <li>
    <div style="width:180px"><i>your server framework</i></div>
    <div style="color:#0b5693;width:25px">&#10132;</div>
    <div>to implement an HTTP API router</div>
  </li>
</ul>
{%- endcall %}

<br />

<callout>
  Currently, only Bookshelf (db service) and Express (server framework) are supported.
</callout>

<br />

{% endblock %}
