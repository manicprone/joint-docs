<div id="joint-instance"></div>
<br /><br /><br />

<h2>Joint Instance</h2>

<p>
  When a Joint has been instantiated, the following properties and functions are available on the instance.
</p>

<h3>Instance Properties</h3>

<table>
  <tr>
    <th>Name</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><a href="#instance-prop-service"><code>service</code></a></td>
    <td>The underlying service implementation (for persistence) provided at instantiation.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-serviceKey"><code>serviceKey</code></a></td>
    <td>A string value identifying the persistence service being used.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-server"><code>server</code></a></td>
    <td>The underlying server implementation, if configured.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-serverKey"><code>serverKey</code></a></td>
    <td>A string value identifying the server being used. <code><i>null</i></code> if not configured.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-output"><code>output</code></a></td>
    <td>The string value for the globally configured output format. <code class="code-ref">'native'</code> by default.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-settings"><code>settings</code></a></td>
    <td>The active settings of the instance.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-modelConfig"><code>modelConfig</code></a></td>
    <td>The active <b>model config</b> defintions, populated by the <func>generate</func> function.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-methodConfig"><code>methodConfig</code></a></td>
    <td>The active <b>method config</b> defintions, populated by the <func>generate</func> function.</td>
  </tr>
  <tr>
    <td><a href="#instance-prop-routeConfig"><code>routeConfig</code></a></td>
    <td>The active <b>route config</b> defintions, populated by the <func>generate</func> function.</td>
  </tr>
</table>

<h4 id="instance-prop-service">service</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-serviceKey">serviceKey</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-server">server</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-serverKey">serverKey</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-output">output</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-settings">settings</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-modelConfig">modelConfig</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-methodConfig">methodConfig</h4>

<p>
  [TBC]
</p>

<h4 id="instance-prop-routeConfig">routeConfig</h4>

<p>
  [TBC]
</p>

<h3>Operational Functions</h3>

<table>
  <tr>
    <th>Function</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><a href="#instance-func-generate">generate(&nbsp;options&nbsp;)</a></td>
    <td>Executes the dynamic generation of models, methods, and routes, per the config descriptors provided.</td>
  </tr>
  <tr>
    <td><a href="#instance-func-setServer">setServer(&nbsp;server&nbsp;)</a></td>
    <td>Allows configuration of the server implementation, post-instantiation.</td>
  </tr>
  <tr>
    <td><a href="#instance-func-setOutput">setOutput(&nbsp;output&nbsp;)</a></td>
    <td>Allows configuration of the output format, post-instantiation.</td>
  </tr>
  <tr>
    <td><a href="#instance-func-updateSettings">updateSettings(&nbsp;settings&nbsp;)</a></td>
    <td>Allows modification of the Joint settings, post-instantiation.</td>
  </tr>
  <tr>
    <td><a href="#instance-func-buildAuthBundle">buildAuthBundle(&nbsp;context, rules&nbsp;)</a></td>
    <td>Generates the authBundle for an action request. This is used when hand-rolling method or router logic.</td>
  </tr>
  <tr>
    <td><a href="#instance-func-info">info(&nbsp;)</a></td>
    <td></td>
  </tr>
</table>

<h4 id="instance-func-generate">generate</h4>

<p>
  [TBC]
</p>

<h4 id="instance-func-setServer">setServer</h4>

<p>
  [TBC]
</p>

<h4 id="instance-func-setOutput">setOutput</h4>

<p>
  [TBC]
</p>

<h4 id="instance-func-updateSettings">updateSettings</h4>

<p>
  [TBC]
</p>

<h4 id="instance-func-buildAuthBundle">buildAuthBundle</h4>

<p>
  [TBC]
</p>

<h4 id="instance-func-info">info</h4>

<p>
  [TBC]
</p>

<h3>Generated Models</h3>

<table>
  <tr>
    <th style="min-width:280px">Syntax</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><a href="#instance-obj-model"><code>model.&lt;<i>modelName</i>&gt;</code></a></td>
    <td>
      The registered Model object with name <code>modelName</code>.
      <br /><br />
      Any existing Models registered to the service instance will be mixed-in with those generated by Joint.
    </td>
  </tr>
  <tr>
    <td><a href="#instance-obj-modelByTable"><code>modelByTable.&lt;<i>tableName</i>&gt;</code></a></td>
    <td>Accesses the registered Model object by its <code>tableName</code>.</td>
  </tr>
  <tr>
    <td><a href="#instance-obj-modelNameByTable"><code>modelNameByTable.&lt;<i>tableName</i>&gt;</code></a></td>
    <td>Accesses the registered Model name by its <code>tableName</code>.</td>
  </tr>
</table>

<h4 id="instance-obj-model">model</h4>

<p>
  [TBC]
</p>

<h4 id="instance-obj-modelByTable">modelByTable</h4>

<p>
  [TBC]
</p>

<h4 id="instance-obj-modelNameByTable">modelNameByTable</h4>

<p>
  [TBC]
</p>

<h3 id="instance-func-method">Generated Methods</h3>

<table>
  <tr>
    <th>Syntax</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>method.<code>&lt;<i>modelName</i>&gt;.&lt;<i>methodName</i>&gt;</code></td>
    <td></td>
  </tr>
  <tr>
    <td><a href="#instance-obj-specByMethod"><code>specByMethod.&lt;<i>modelName</i>&gt;.&lt;<i>methodName</i>&gt;</code></a></td>
    <td>
      Accesses the configured <code class="code-ref">spec</code> definition for a generated method
      by its <code>&lt;<i>modelName</i>&gt;.&lt;<i>methodName</i>&gt;</code> syntax.
    </td>
  </tr>
</table>

<h4 id="instance-obj-specByMethod">specByMethod</h4>

<p>
  [TBC]
</p>

<h3 id="instance-func-router">Generated Router</h3>

<table>
  <tr>
    <th>Syntax</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>router</td>
    <td></td>
  </tr>
</table>
